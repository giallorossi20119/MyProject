//
//  MainViewController.m
//  NooPhuocThinh
//
//  Created by MAC_OSX on 12/3/13.
//  Copyright MAC_OSX 2013. All rights reserved.
//

#import "MainViewController.h"

@interface MainViewController ()

@end

@implementation MainViewController

@synthesize viewFirst, viewSecond;
@synthesize scrollImage, scrollFunction;
@synthesize pageCtrImage, pageCtrFunction;
@synthesize autoScrollLabel, radialProgress;

#pragma mark - Main

- (void)viewDidLoad
{
    [super viewDidLoad];
	// Do any additional setup after loading the view, typically from a nib.
    
    //-- check user and going to Fanzone screen
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(goingtoFanZoneScreen:) name:@"Going_To_FanzoneVC" object:nil];
    
    //-- check user and going to Fanzone screen
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(goingtoMusicHomeScreen) name:@"Going_To_MusicHomeVC" object:nil];
    
    
    isSelectedFanZone = NO;
    
    _currentPage = 0;
    _isCacheDataSourceAlbum = YES;
    
    //--alloc data
    arrAlbums = [[NSMutableArray alloc] init];
    _dataSourceAlbum = [[NSMutableArray alloc] init];
    
    scrollImage.alpha = 0;
    imgCover.alpha = 1;
    
    if (self.radialProgress == nil)
    {
        CGSize defaultSize = (CGSize){50, 50};
        defaultSize = (CGSize){30, 30};
        self.radialProgress = [[JPRadialProgressView alloc] initWithFrame:(CGRect){30, 30, defaultSize}];
        [self.view addSubview:self.radialProgress];
        self.radialProgress.emptyColor = [UIColor colorWithRed:74.0f/256.0f green:74.0f/256.0f blue:74.0f/256.0f alpha:1.0];
        
        CGRect frame = self.view.frame;
        self.radialProgress.frame = CGRectMake(frame.size.width/2 -  self.radialProgress.frame.size.width/2, frame.size.height/3 -  self.radialProgress.frame.size.height/2, self.radialProgress.frame.size.width, self.radialProgress.frame.size.height);
        self.radialProgress.fillColor = [UIColor whiteColor];
        [self.view addSubview:self.radialProgress];
    }
    
    //-- setup view
    [self setViewWhenViewDidLoad];
    
    //-- set invalidate timerAuto
    [self.timerAuto invalidate];
    
    //-- load photo album
    [self setDataWhenViewDidLoad];
}


- (void)viewWillAppear:(BOOL)animated
{
    self.screenName = @"Main Screen";
    
    [super viewWillAppear:animated];
    
    //--hidden navigation and tabbar
    self.navigationController.navigationBarHidden = YES;
    [self.navigationController setToolbarHidden:YES animated:NO];
    
    //-- fetching News
    [self fetchingNewsHost];
    
    //--set auto scroll label
    [self autoScrollText];
    
    //-- set auto scroll image
    if (_dataSourceAlbum.count > 0) {
        
        [self.timerAuto invalidate];
        self.timerAuto = [NSTimer scheduledTimerWithTimeInterval:3.0
                                                          target:self
                                                        selector:@selector(onTimer)
                                                        userInfo:nil
                                                         repeats:YES];
    }
}

//-- setup view
-(void) setViewWhenViewDidLoad {
    
    //-- set font for singer name
    [self setFontForSingerName];
    
    //-- load scroll funtion
    [self loadScrollFunction];
}

//-- load photo album
-(void) setDataWhenViewDidLoad {
    
    //-- fetching Photo album
    [self fetchingPhotoAlbum];
}


//-- go to Fanzone
-(void) goingtoFanZoneScreen:(NSNotification *) notification {
    
    BOOL isExistFanzoneVC = NO;
    
    for (int i = 0; i< self.navigationController.viewControllers.count; i++) {
        
        UIViewController *fanZoneVC = [self.navigationController.viewControllers objectAtIndex:i];
        
        if ([fanZoneVC isKindOfClass:[FanZoneViewController class]]) {
            
            //-- exist
            isExistFanzoneVC = YES;
            
            break;
        }
    }
    
    if (isExistFanzoneVC == NO) {
        
        //-- set invalidate timerAuto
        [self.timerAuto invalidate];
        
        FanZoneViewController *fzVC = [self.storyboard instantiateViewControllerWithIdentifier:@"sbIDFanZoneViewController"];
        fzVC._currentIndex = [notification.object integerValue];
        
        if (SYSTEM_VERSION_LESS_THAN(@"7.0"))
            [self.navigationController pushViewController:fzVC animated:YES];
        else
            [self.navigationController pushViewController:fzVC animated:NO];
    }
}

//-- go to Music Home when selected button Play
-(void) goingtoMusicHomeScreen {
    
    BOOL isExistMusicHomeVC = NO;
    
    for (int i = 0; i< self.navigationController.viewControllers.count; i++) {
        
        UIViewController *musicHomeVC = [self.navigationController.viewControllers objectAtIndex:i];
        
        if ([musicHomeVC isKindOfClass:[MusicHomeViewController class]]) {
            
            //-- exist
            isExistMusicHomeVC = YES;
            
            break;
        }
    }
    
    if (isExistMusicHomeVC == NO) {
        
        //-- set invalidate timerAuto
        [self.timerAuto invalidate];
        
        MusicHomeViewController *mhVC = [self.storyboard instantiateViewControllerWithIdentifier:@"idMusicHomeViewControllerSb"];
        
        if (SYSTEM_VERSION_LESS_THAN(@"7.0"))
            [self.navigationController pushViewController:mhVC animated:YES];
        else
            [self.navigationController pushViewController:mhVC animated:NO];
    }
}


- (void)setFontForSingerName
{
    NSString *singerNameSetting = [[NSUserDefaults standardUserDefaults] objectForKey:Key_Singer_Name];
    if ([singerNameSetting length] == 0)
        singerNameSetting = KEY_SINGER_NAME;// @"Noo Phước Thịnh";
    
    
    singerName.text = singerNameSetting;
    [singerName setFont:[UIFont fontWithName:@"VIE-HandelGothic-Bold" size:30.0f]];
}


- (void)autoScrollText
{
    NSString *singerNoticeDefault = [[NSUserDefaults standardUserDefaults] objectForKey:Key_Singer_Notice_Default];
    
    if ([singerNoticeDefault length] == 0)
        singerNoticeDefault = TITLE_Singer_Notice_Default;
    
    self.autoScrollLabel.text = singerNoticeDefault;
    [self.autoScrollLabel setFont:[UIFont systemFontOfSize:13]];
    self.autoScrollLabel.textColor = [UIColor whiteColor];
    self.autoScrollLabel.labelSpacing = 200; // distance between start and end labels
    self.autoScrollLabel.pauseInterval = 0.3; // seconds of pause before scrolling starts again
    self.autoScrollLabel.scrollSpeed = 45; // pixels per second
    self.autoScrollLabel.textAlignment = NSTextAlignmentCenter; // centers text when no auto-scrolling is applied
    self.autoScrollLabel.fadeLength = 12.f;
    self.autoScrollLabel.shadowOffset = CGSizeMake(-1, -1);
    self.autoScrollLabel.scrollDirection = CBAutoScrollDirectionLeft;
}


- (void)loadScrollImage
{
    [scrollImage scrollRectToVisible:CGRectMake(0, 0, scrollImage.frame.size.width, scrollImage.frame.size.height) animated:NO];
    scrollImage.showsHorizontalScrollIndicator = NO;
    scrollImage.showsVerticalScrollIndicator = NO;
    scrollImage.alwaysBounceVertical = NO;
    scrollImage.pagingEnabled = YES;
    
    if (_dataSourceAlbum.count >= 5) {
        for (NSInteger i = 0; i < 5; i ++) {
            NSString *imagePath = ((MusicAlbum *)[_dataSourceAlbum objectAtIndex:i]).thumbImagePath;
            [self addImageWithName:imagePath atPosition:i];
        }
        
        //-- set number of pages
        pageCtrImage.numberOfPages = 5;
        scrollImage.contentSize = CGSizeMake(5 * scrollImage.frame.size.width, scrollImage.frame.size.height);
        
        //-- set auto scroll image
        if (!self.timerAuto) {
            self.timerAuto = [NSTimer scheduledTimerWithTimeInterval:3.0
                                                              target:self
                                                            selector:@selector(onTimer)
                                                            userInfo:nil
                                                             repeats:YES];
        }
        
    }else{
        
        if (_dataSourceAlbum.count > 0) {
            
            for (NSInteger i = 0; i < _dataSourceAlbum.count; i ++) {
                NSString *imagePath = ((MusicAlbum *)[_dataSourceAlbum objectAtIndex:i]).thumbImagePath;
                [self addImageWithName:imagePath atPosition:i];
            }
            
            //-- set number of pages
            pageCtrImage.numberOfPages = _dataSourceAlbum.count;
            scrollImage.contentSize = CGSizeMake(_dataSourceAlbum.count * scrollImage.frame.size.width, scrollImage.frame.size.height);
            
            //-- set auto scroll image
            if (!self.timerAuto) {
                self.timerAuto = [NSTimer scheduledTimerWithTimeInterval:3.0
                                                                  target:self
                                                                selector:@selector(onTimer)
                                                                userInfo:nil
                                                                 repeats:YES];
            }
        }
    }
}


- (void)loadScrollFunction
{
    scrollFunction.contentSize = CGSizeMake(scrollFunction.frame.size.width*2, scrollFunction.frame.size.height);
    scrollFunction.showsHorizontalScrollIndicator = NO;
    scrollFunction.showsVerticalScrollIndicator = NO;
    scrollFunction.alwaysBounceVertical = NO;
    scrollFunction.pagingEnabled = YES;
    scrollFunction.delegate = self;
    
    NSInteger numberOfViews = 2;
    for (int i = 0; i< numberOfViews; i++) {
        CGFloat xOrigin = i * scrollFunction.frame.size.width;
        UIView *myView = [[UIView alloc] initWithFrame:CGRectMake(xOrigin, 0, scrollFunction.frame.size.width, scrollFunction.frame.size.height)];
        switch (i) {
            case 0: {
                [myView addSubview:viewFirst];
                break;
            }
            case 1: {
                [myView addSubview:viewSecond];
                break;
            }
            
            default: {
                break;
            }
        }
        
        [scrollFunction addSubview:myView];
    }
    
    scrollFunction.contentSize = CGSizeMake(scrollFunction.frame.size.width * numberOfViews, scrollFunction.frame.size.height);
}


- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}



#pragma mark - Call API

-(void) fetchingNewsHost {
    NSLog(@"%s", __func__);

   //-- request new news async
    [API getNodeForSingerID:SINGER_ID
              contentTypeId:16
                      limit:@"5"
                       page:@"0"
                     period:@""
                  isHotNode:@"0"
                      start:@""
                      appID:PRODUCTION_ID
                 appVersion:PRODUCTION_VERSION
                  completed:^(NSDictionary *responseDictionary, NSError *error) {
                      
                      //-- fetching
                      [self getDatasourceNewsHostWith:responseDictionary];
                  }];
}

-(void) getDatasourceNewsHostWith:(NSDictionary *)aDictionary {
    
    if (aDictionary)
    {
        NSString *singerNoticeDefault = [[NSUserDefaults standardUserDefaults] objectForKey:Key_Singer_Notice_Default];
        
        if ([singerNoticeDefault length] == 0)
            singerNoticeDefault = TITLE_Singer_Notice_Default;
            
        
        NSDictionary *dictData = [aDictionary objectForKey:@"data"];
        NSMutableArray *arrCategory = [dictData objectForKey:@"singer_list"];
        if ([arrCategory count] > 0)
        {
            NSDictionary *dictSinger = [arrCategory objectAtIndex:0];
            NSMutableArray *arrNews = [dictSinger objectForKey:@"node_list"];
            
            if ([arrNews count] > 0)
            {
                //-- create JSON
                NSString *lableString = @"";
                
                for (NSInteger i = 0; i< arrNews.count; i++) {
                    
                    NSDictionary *newsInfo = [arrNews objectAtIndex:i];
                    
                    NSString *titleNews = [newsInfo valueForKey:@"title"];
                    
                    if ([titleNews length] >= 100)
                        titleNews = [NSString stringWithFormat:@"%@...",[titleNews substringToIndex:100]];
                    
                    //-- remove \n
                    titleNews = [titleNews stringByReplacingOccurrencesOfString:@" \n" withString:@""];
                    titleNews = [titleNews stringByReplacingOccurrencesOfString:@"\n" withString:@""];
                    
                    
                    if (i == 0)
                        lableString = [lableString stringByAppendingString:[NSString stringWithFormat:@"%@",titleNews]];
                    else
                        lableString = [lableString stringByAppendingString:[NSString stringWithFormat:@"               %@",titleNews]];
                }
                
                if ([lableString length] > 0)
                    self.autoScrollLabel.text = lableString;
                else
                    self.autoScrollLabel.text = singerNoticeDefault;
            }
        }
    }
}


- (void)fetchingPhotoAlbum
{
    //-- remove all object
    [arrAlbums removeAllObjects];
    
    //-- check Network
    BOOL isErrorNetWork = [self checkAndShowErrorNoticeNetwork];
    if (!isErrorNetWork) {
        
        //-- read cache
        _dataSourceAlbum = [VMDataBase getAllAlbumPhotoForContentType:ContentTypeIDPhoto];
        
        if (_dataSourceAlbum.count > 0){
            scrollImage.alpha = 1;
            imgCover.alpha = 0;
            
            //-- reload tableview
            [self loadScrollImage];
        }else{
            scrollImage.alpha = 0;
            imgCover.alpha = 1;
            
            self.radialProgress.hidden = YES;
        }
    }else {
        
        //-- request news async
        [API getAlbumOfSinglerID:SINGER_ID
                   contentTypeId:ContentTypeIDPhoto
                           limit:@"200"
                            page:[NSString stringWithFormat:@"%d",_currentPage]
                       isGetBody:@"1"
                        isGetHot:@"0"
                           appID:PRODUCTION_ID
                      appVersion:PRODUCTION_VERSION
                       completed:^(NSDictionary *responseDictionary, NSError *error) {
                           
                           if (!error && responseDictionary) {
                               
                               //-- fetching
                               [self createDataSourcePhotoInAlbum:responseDictionary];
                               
                           }else{
                               scrollImage.alpha = 0;
                               imgCover.alpha = 1;
                               
                               self.radialProgress.hidden = YES;
                           }
                           
                       }];
    }
}


-(void)createDataSourcePhotoInAlbum:(NSDictionary *)aDictionary
{
    NSDictionary *dictData = [aDictionary objectForKey:@"data"];
    NSMutableArray *arrSinger = [dictData objectForKey:@"singer_list"];
    
    if ([arrSinger count] > 0)
    {
        arrAlbums = [[arrSinger objectAtIndex:0] objectForKey:@"album_list"];
        
        if ([arrAlbums count] > 0)
        {
            scrollImage.alpha = 1;
            imgCover.alpha = 0;
            
            //-- delete cache
            if (_currentPage == 0)
            {
                [VMDataBase deleteAllAlbumPhotoFromDB];
                [_dataSourceAlbum removeAllObjects];
            }
            
            for (NSInteger i = 0; i < [arrAlbums count]; i++)
            {
                ListAlbumPhoto *aAlbums = [[ListAlbumPhoto alloc] init];
                
                aAlbums.albumId = [[arrAlbums objectAtIndex:i] objectForKey:@"album_id"];
                aAlbums.name = [[arrAlbums objectAtIndex:i] objectForKey:@"name"];
                aAlbums.thumbImagePath = [[arrAlbums objectAtIndex:i] objectForKey:@"thumbnail_image_path"];
                aAlbums.description = [[arrAlbums objectAtIndex:i] objectForKey:@"description"];
                aAlbums.order = [[arrAlbums objectAtIndex:i] objectForKey:@"order"];
                aAlbums.totalPhoto = [[arrAlbums objectAtIndex:i] objectForKey:@"total_photo"];
                aAlbums.photoList = [[arrAlbums objectAtIndex:i] objectForKey:@"photo_list"];
                NSString *numberComment = [NSString stringWithFormat:@"%d",[[[arrAlbums objectAtIndex:i] objectForKey:@"sns_total_comment"] intValue]];
                NSString *numberLike = [NSString stringWithFormat:@"%d",[[[arrAlbums objectAtIndex:i] objectForKey:@"sns_total_like"] intValue]];
                aAlbums.snsTotalComment = numberComment;
                aAlbums.snsTotalLike = numberLike;
                aAlbums.snsTotalDisLike = [[arrAlbums objectAtIndex:i] objectForKey:@"sns_total_dislike"];
                aAlbums.snsTotalShare = [[arrAlbums objectAtIndex:i] objectForKey:@"sns_total_share"];
                aAlbums.snsTotalView = [[arrAlbums objectAtIndex:i] objectForKey:@"sns_total_view"];
                
                [_dataSourceAlbum addObject:aAlbums];
                
                //-- insert into DB
                [VMDataBase insertAlbumPhotoBySinger:aAlbums];
            }
            
            [self loadScrollImage];
            
        }else{
            self.radialProgress.hidden = YES;
            
            scrollImage.alpha = 0;
            imgCover.alpha = 1;
        }
    }
}



#pragma mark - ACTION

- (void) onTimer
{
    // Updates the variable w, adding 320
    CGFloat w = scrollImage.contentOffset.x;
    
    //This makes the scrollView scroll to the desired position
    if (_dataSourceAlbum.count <= 5) {
        if (w == scrollImage.frame.size.width*(_dataSourceAlbum.count-1)) {
            w = 0;
            scrollImage.contentOffset = CGPointMake(w, 0);
        } else {
            w += 320;
            [UIView animateWithDuration:0.5 animations:^{
                scrollImage.contentOffset = CGPointMake(w, 0);
            }];
        }
    }else{
        if (w == scrollImage.frame.size.width*4) {
            w = 0;
            scrollImage.contentOffset = CGPointMake(w, 0);
        } else {
            w += 320;
            [UIView animateWithDuration:0.5 animations:^{
                scrollImage.contentOffset = CGPointMake(w, 0);
            }];
        }
    }
}


- (IBAction)clicToBtnSearch:(id)sender
{
    //
}


- (IBAction)clickToBtnNews:(id)sender
{
    //-- set invalidate timerAuto
    [self.timerAuto invalidate];
    
    NewsViewController *nvc = [self.storyboard instantiateViewControllerWithIdentifier:@"idNewsViewControllerSb"];
    
    if (SYSTEM_VERSION_LESS_THAN(@"7.0"))
        [self.navigationController pushViewController:nvc animated:YES];
    else
        [self.navigationController pushViewController:nvc animated:NO];
}

- (IBAction)clickToBtnMusic:(id)sender
{
    //-- set invalidate timerAuto
    [self.timerAuto invalidate];
    
    MusicHomeViewController *mhVC = [self.storyboard instantiateViewControllerWithIdentifier:@"idMusicHomeViewControllerSb"];
    
    if (SYSTEM_VERSION_LESS_THAN(@"7.0"))
        [self.navigationController pushViewController:mhVC animated:YES];
    else
        [self.navigationController pushViewController:mhVC animated:NO];
}


- (IBAction)clickToBtnVideo:(id)sender
{
    //-- set invalidate timerAuto
    [self.timerAuto invalidate];
    
    VideoViewController *vvc = [self.storyboard instantiateViewControllerWithIdentifier:@"sbIDVideoViewController"];
    
    if (SYSTEM_VERSION_LESS_THAN(@"7.0"))
        [self.navigationController pushViewController:vvc animated:YES];
    else
        [self.navigationController pushViewController:vvc animated:NO];
}


- (IBAction)clickToBtnPhoto:(id)sender
{
    //-- set invalidate timerAuto
    [self.timerAuto invalidate];
    
    PhotoViewController *pvc = [self.storyboard instantiateViewControllerWithIdentifier:@"sbPhotoVIewControllerId"];
    
    if (SYSTEM_VERSION_LESS_THAN(@"7.0"))
        [self.navigationController pushViewController:pvc animated:YES];
    else
        [self.navigationController pushViewController:pvc animated:NO];
}


- (IBAction)clickToBtnProfile:(id)sender
{
    //-- set delegate
    [self setDelegateBaseController:self];
    isSelectedFanZone = NO;
    /*
    //anhvt: tien hanh kiem tra user
    NSString *userId = [[NSUserDefaults standardUserDefaults] objectForKey:MY_ACCOUNT_ID];
    NSString *mobileNum = [[NSUserDefaults standardUserDefaults] objectForKey:MOBILE_NUMBER];
    if (userId && mobileNum) {
        //Gui len server kiem tra account co van de gi khong
        [[SHKActivityIndicator currentIndicator] displayActivity:@"Checking..."];
        [API getUserExistByFBTypeRequest:@"Mobile" mobile:mobileNum fb_user_id:@"" completed:^(NSDictionary *responseDictionary, NSError *error) {
            //-- hidden loading
            [[SHKActivityIndicator currentIndicator] hideAfterDelayWithTime:0.1f];
            if (!error) {
                NSInteger code = [[responseDictionary valueForKey:@"code"] integerValue];
                if (code == 1) {
                    //-- set invalidate timerAuto
                    [self.timerAuto invalidate];
                    
                    ProfileViewController *pVC = [self.storyboard instantiateViewControllerWithIdentifier:@"idProfileViewControllerSb"];
                    pVC.userId = userId;
                    pVC.profileType = ProfileTypeMyAccount;
                    pVC.isSelectedProfile = YES;
                    
                    if (SYSTEM_VERSION_LESS_THAN(@"7.0"))
                        [self.navigationController pushViewController:pVC animated:YES];
                    else
                        [self.navigationController pushViewController:pVC animated:NO];

                }else {
                    //-- thông báo nâng cấp user
                    [self showMessageUpdateLevelOfUser];
                    
                    //-- Exist Phome number : check payment_type for Phone Number
                    //[self checkPaymentTypeForPhoneNumber:phoneNumberInput];
                }
                
            } else {
                //-- thông báo nâng cấp user
                [self showMessageUpdateLevelOfUser];
            }
            
        }];
    } else {
        //-- thông báo nâng cấp user
        [self showMessageUpdateLevelOfUser];
        
    }
     */
    //-==================================================================================
    NSString *userId = [[NSUserDefaults standardUserDefaults] objectForKey:MY_ACCOUNT_ID];
    
    if (userId) {
        
        //-- set invalidate timerAuto
        [self.timerAuto invalidate];
        
        ProfileViewController *pVC = [self.storyboard instantiateViewControllerWithIdentifier:@"idProfileViewControllerSb"];
        pVC.userId = userId;
        pVC.profileType = ProfileTypeMyAccount;
        pVC.isSelectedProfile = YES;
        
        if (SYSTEM_VERSION_LESS_THAN(@"7.0"))
            [self.navigationController pushViewController:pVC animated:YES];
        else
            [self.navigationController pushViewController:pVC animated:NO];
    }
    else
    {
        //-- thông báo nâng cấp user
        [self showMessageUpdateLevelOfUser];
    }
   
}


- (IBAction)clickToBtnFanZone:(id)sender
{
    //-- set invalidate timerAuto
    [self.timerAuto invalidate];
    
    //-- set delegate
    [self setDelegateBaseController:self];
    isSelectedFanZone = YES;
    
    FanZoneViewController *fzVC = [self.storyboard instantiateViewControllerWithIdentifier:@"sbIDFanZoneViewController"];
    
    if (SYSTEM_VERSION_LESS_THAN(@"7.0"))
        [self.navigationController pushViewController:fzVC animated:YES];
    else
        [self.navigationController pushViewController:fzVC animated:NO];
}

- (void)notifyReceiveSyncAPIResponse:(bool)isSuccess;
{
//    _isProcessLikeAPI = false;
}


//-- pass base view controller delegete
- (void) baseViewController:(BaseViewController *)baseViewController didCreateAccountSuscessful:(Profile *)Profile
{
    //-- set invalidate timerAuto
    [self.timerAuto invalidate];
    
    NSString *userId = [[NSUserDefaults standardUserDefaults] objectForKey:MY_ACCOUNT_ID];
    
    if(!isSelectedFanZone && userId) { //-- swith to profile
        
        ProfileViewController *pVC = [self.storyboard instantiateViewControllerWithIdentifier:@"idProfileViewControllerSb"];
        pVC.userId = userId;
        pVC.profileType = ProfileTypeMyAccount;
        pVC.isSelectedProfile = YES;
            
        if (SYSTEM_VERSION_LESS_THAN(@"7.0"))
            [self.navigationController pushViewController:pVC animated:YES];
        else
            [self.navigationController pushViewController:pVC animated:NO];
        
    }else if(isSelectedFanZone && userId) { //-- swith to fanzone
        
        FanZoneViewController *fzVC = [self.storyboard instantiateViewControllerWithIdentifier:@"sbIDFanZoneViewController"];
        
        if (![self.navigationController.viewControllers containsObject:fzVC]) {
            
            if (SYSTEM_VERSION_LESS_THAN(@"7.0"))
                [self.navigationController pushViewController:fzVC animated:YES];
            else
                [self.navigationController pushViewController:fzVC animated:NO];
        }
    }
}


- (IBAction)clickToBtnTopUser:(id)sender
{
    //-- set invalidate timerAuto
    [self.timerAuto invalidate];
    
    TopUserViewController *tuVC = [self.storyboard instantiateViewControllerWithIdentifier:@"idTopUserViewControllerSb"];
    
    if (SYSTEM_VERSION_LESS_THAN(@"7.0"))
        [self.navigationController pushViewController:tuVC animated:YES];
    else
        [self.navigationController pushViewController:tuVC animated:NO];
}


- (IBAction)clickToBtnAbout:(id)sender
{
    //-- set invalidate timerAuto
    [self.timerAuto invalidate];
    
    AboutViewController *tuVC = [self.storyboard instantiateViewControllerWithIdentifier:@"sbAboutViewControllerId"];
    
    if (SYSTEM_VERSION_LESS_THAN(@"7.0"))
        [self.navigationController pushViewController:tuVC animated:YES];
    else
        [self.navigationController pushViewController:tuVC animated:NO];
}


- (IBAction)clickToBtnStore:(id)sender
{
    //-- set invalidate timerAuto
    [self.timerAuto invalidate];
    
    StoreViewController *pVC = [self.storyboard instantiateViewControllerWithIdentifier:@"idStoreViewControllerSb"];
    
    if (SYSTEM_VERSION_LESS_THAN(@"7.0"))
        [self.navigationController pushViewController:pVC animated:YES];
    else
        [self.navigationController pushViewController:pVC animated:NO];
}


- (IBAction)clickToBtnSchedule:(id)sender
{
    //-- set invalidate timerAuto
    [self.timerAuto invalidate];
    
    ScheduleViewController *tuVC = [self.storyboard instantiateViewControllerWithIdentifier:@"sbScheduleViewControllerId"];
    
    if (SYSTEM_VERSION_LESS_THAN(@"7.0"))
        [self.navigationController pushViewController:tuVC animated:YES];
    else
        [self.navigationController pushViewController:tuVC animated:NO];
}


- (IBAction)clickBtnAutoScrollLabel:(id)sender
{
    //-- set invalidate timerAuto
    [self.timerAuto invalidate];
    
    NewsViewController *nvc = [self.storyboard instantiateViewControllerWithIdentifier:@"idNewsViewControllerSb"];
    
    if (SYSTEM_VERSION_LESS_THAN(@"7.0"))
        [self.navigationController pushViewController:nvc animated:YES];
    else
        [self.navigationController pushViewController:nvc animated:NO];
}


//--change pageControl
- (IBAction)changepage:(id)sender
{
    // update the scroll view to the appropriate page
    CGRect frame;
    frame.origin.x = self.scrollImage.frame.size.width * self.pageCtrImage.currentPage;
    frame.origin.y = 0;
    frame.size = self.scrollImage.frame.size;
    [self.scrollImage scrollRectToVisible:frame animated:YES];
    
    [self.pageCtrImage setCurrentPageIndicatorTintColor:[UIColor blueColor]];
    [self.pageCtrImage setPageIndicatorTintColor:[UIColor grayColor]];
    
    if ([pageCtrImage respondsToSelector:@selector(pageIndicatorTintColor)]) {
        pageCtrImage.pageIndicatorTintColor = [UIColor grayColor];
        pageCtrImage.currentPageIndicatorTintColor = [UIColor blueColor];
    }
    
    // update the scroll view to the appropriate page
    CGRect frameFunc;
    frameFunc.origin.x = self.scrollFunction.frame.size.width * self.pageCtrFunction.currentPage;
    frameFunc.origin.y = 0;
    frameFunc.size = self.scrollFunction.frame.size;
    [self.scrollFunction scrollRectToVisible:frameFunc animated:YES];
}


-(IBAction)singleTapping:(UIGestureRecognizer *)sender
{
    //-- set invalidate timerAuto
    [self.timerAuto invalidate];
    
    NSInteger indexAlbum = [sender view].tag;

    PhotoAlbumViewController *maVC = [self.storyboard instantiateViewControllerWithIdentifier:@"sbPhotoAlbumViewControllerId"];
    
    NSMutableArray *albumTitleArr = [[NSMutableArray alloc] init];
    ListAlbumPhoto *abP;
    NSInteger indexOfAlbum;
    
    if ([_dataSourceAlbum count]>0) {
        
        for (NSInteger i=0; i<[_dataSourceAlbum count]; i++) {
            ListAlbumPhoto *tmp2 = (ListAlbumPhoto *)[_dataSourceAlbum objectAtIndex:i];
            NSString *title = tmp2.name;
            
            [albumTitleArr addObject:title];
        }
        [albumTitleArr insertObject:@"Tất cả" atIndex:0];
    }
    
    if ([_dataSourceAlbum count]>0) {
        abP = (ListAlbumPhoto *)[_dataSourceAlbum objectAtIndex:indexAlbum];
        indexOfAlbum = [_dataSourceAlbum indexOfObject:abP] + 1;
    }
    
    if (abP) {
        maVC.indexOfAlbum = indexOfAlbum;
        maVC.arrPhotos = _dataSourceAlbum;
        maVC.arrTitle = albumTitleArr;
    }
    
    if (SYSTEM_VERSION_LESS_THAN(@"7.0"))
        [self.navigationController pushViewController:maVC animated:YES];
    else
        [self.navigationController pushViewController:maVC animated:NO];
}



#pragma mark - ScrollViewDelegate

-(void)addImageWithName:(NSString *)imageString atPosition:(int)position
{
    // Load the photo view.
    CGRect frame = self.scrollImage.bounds;
    frame.origin.x = frame.size.width * position;
    frame.size.height = 249;//anhvt fix
//    if (isIphone5)
//        frame.size.height = 249;//=293 anhvt fix
//    else
//        frame.size.height = 205;
    NSLog(@"frame w:%f h:%f",frame.size.width,frame.size.height);
    frame.origin.y = 0.0f;
    frame = CGRectInset(frame, 5.0f, 0.0f);
    
    newPageView = [[UIImageView alloc] init];
    newPageView.frame = frame;
    
    //-- show radialProgress
    self.radialProgress.hidden = NO;
    
    [self callGetImageUrlForCellWithIndex:position withImageView:newPageView withUrl:imageString];
    
    //-- hidden radialProgress
    self.radialProgress.hidden = YES;
    self.radialProgress = nil;
    
    [self.scrollImage addSubview:newPageView];
}


//-- get image url
-(void) callGetImageUrlForCellWithIndex:(int) position withImageView:(UIImageView *)newImage withUrl:(NSString *)urlString
{
    __weak typeof(self) weakSelf = self;
    __weak typeof(newImage) weakPage = newImage;
    
    //-- fix size
    [weakPage setContentMode:UIViewContentModeScaleAspectFill];
    [weakPage setClipsToBounds:YES];
    
    //-- download image
    [newImage setImageWithURL:[NSURL URLWithString:urlString] placeholderImage:[UIImage imageNamed:@"HomeDefault.png"] options:SDWebImageProgressiveDownload progress:^(NSUInteger receivedSize, long long expectedSize)
     {
         weakSelf.radialProgress.progress =  (float)receivedSize/expectedSize;
//         if (weakSelf.radialProgress.hidden == YES)
//         {
//             weakSelf.radialProgress.hidden = NO;
//         }
     }
                           completed:^(UIImage *image, NSError *error, SDImageCacheType cacheType)
     {
         weakSelf.radialProgress.progress = 0.0f;
         //weakSelf.radialProgress.hidden = YES;

         [Utility scaleImage:weakPage.image toSize:CGSizeMake(weakSelf.scrollImage.frame.size.width, weakSelf.scrollImage.frame.size.height)];
         
         //-- add action for photo
         [weakPage setUserInteractionEnabled:YES];
         UITapGestureRecognizer *singleTap =  [[UITapGestureRecognizer alloc] initWithTarget:weakSelf action:@selector(singleTapping:)];
         [singleTap setNumberOfTapsRequired:1];
         [weakPage addGestureRecognizer:singleTap];
         weakPage.tag = position;
         
         [weakSelf.scrollImage addSubview:weakPage];
         
     }];
}


- (void)scrollViewDidScroll:(UIScrollView *)sender
{
    // Update the page when more than 50% of the previous/next page is visible for scrollImage
    CGFloat pageWidth = self.scrollImage.frame.size.width;
    int page = floor((self.scrollImage.contentOffset.x - pageWidth / 2) / pageWidth) + 1;
    self.pageCtrImage.currentPage = page;
    
    // Update the page when more than 50% of the previous/next page is visible for scrollFunction
    CGFloat pageWidth2 = self.scrollFunction.frame.size.width;
    int page2 = floor((self.scrollFunction.contentOffset.x - pageWidth2 / 2) / pageWidth2) + 1;
    self.pageCtrFunction.currentPage = page2;
}


- (void)scrollViewWillBeginDragging:(UIScrollView *)scrollView
{
    pageControlUsed = NO;
    [self.timerAuto invalidate];
}


- (void)scrollViewDidEndDecelerating:(UIScrollView *)scrollView
{
    pageControlUsed = NO;
    
    //-- set auto scroll image
    self.timerAuto = [NSTimer scheduledTimerWithTimeInterval:3.0
                                                      target:self
                                                    selector:@selector(onTimer)
                                                    userInfo:nil
                                                     repeats:YES];
}


@end
